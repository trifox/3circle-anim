// Generated by CoffeeScript 2.0.2
(function() {
  var TokenizerCodeMirror, TokenizerFactory,
    indexOf = [].indexOf;

  TokenizerCodeMirror = require('./TokenizerCodeMirror');

  TokenizerFactory = (function() {
    class TokenizerFactory {
      getLanguageByExtension(extension) {
        var language;
        for (language in TokenizerFactory.prototype.LANGUAGES) {
          if (indexOf.call(TokenizerFactory.prototype.LANGUAGES[language], extension) >= 0) {
            return language;
          }
        }
        return false;
      }

      getExtensionsByLanguages(languages) {
        var language, result;
        if (typeof languages === 'string') {
          languages = [languages];
        }
        result = [];
        for (language in TokenizerFactory.prototype.LANGUAGES) {
          if (indexOf.call(languages, language) >= 0) {
            result.push(...TokenizerFactory.prototype.LANGUAGES[language]);
          }
        }
        return result;
      }

      makeTokenizer(filename, supportedLanguages) {
        var extension, language, matches, ref;
        extension = '';
        matches = filename.match(/\.(\w*)$/);
        if (matches) {
          extension = (ref = matches[1]) != null ? ref.toLowerCase() : void 0;
        }
        language = TokenizerFactory.prototype.getLanguageByExtension(extension);
        if (indexOf.call(supportedLanguages, language) < 0) {
          return false;
        }
        if (!(language in TokenizerFactory.prototype.tokenizers)) {
          TokenizerFactory.prototype.tokenizers[language] = new TokenizerCodeMirror();
          TokenizerFactory.prototype.tokenizers[language].setTypeAndMode(language);
        }
        return TokenizerFactory.prototype.tokenizers[language];
      }

    };

    TokenizerFactory.prototype.tokenizers = {};

    TokenizerFactory.prototype.LANGUAGES = {
      javascript: ['js', 'es', 'es6'],
      typescript: ['ts', 'tsx'],
      jsx: ['jsx'],
      haxe: ['hx', 'hxml'],
      coffeescript: ['coffee'],
      ruby: ['rb'],
      php: ['php', 'phtml'],
      python: ['py'],
      perl: ['pl', 'pm'],
      css: ['less', 'css'],
      sass: ['scss'],
      java: ['java'],
      scala: ['scala'],
      csharp: ['cs'],
      go: ['go'],
      clike: ['cpp', 'c', 'm', 'h'],
      htmlmixed: ['html', 'htm'],
      yaml: ['yaml', 'yml'],
      erlang: ['erl', 'erlang'],
      swift: ['swift'],
      xml: ['xml', 'xsl', 'xslt'],
      puppet: ['pp', 'puppet'],
      twig: ['twig'],
      vue: ['vue'],
      lua: ['lua']
    };

    return TokenizerFactory;

  })();

  module.exports = TokenizerFactory;

}).call(this);
