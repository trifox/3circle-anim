// Generated by CoffeeScript 2.0.2
(function() {
  var TokenizerBase, crypto,
    indexOf = [].indexOf;

  crypto = require('crypto');

  TokenizerBase = class TokenizerBase {
    constructor() {
      this.skipComments = false;
      this.tokenTypes = [];
    }

    tokenize(code) {}

    getType() {}

    generateMap() {}

    isEmptyToken(value) {
      return value.replace(/^\s+|\s+$/g, '').length === 0;
    }

    validToken(type) {
      var ref;
      return (((ref = this.type) === 'coffeescript' || ref === 'python' || ref === 'ruby') || type !== 'empty') && (!this.skipComments || type !== 'comment');
    }

    getTokenTypeId(name) {
      var result;
      result = 0;
      if (indexOf.call(this.tokenTypes, name) >= 0) {
        result = this.tokenTypes.indexOf(name);
      } else {
        result = this.tokenTypes.length;
        this.tokenTypes.push(name);
      }
      return result;
    }

    createMap(type, value) {
      return String.fromCharCode(this.getTokenTypeId(type)) + crypto.createHash('md5').update(value.toString()).digest('hex');
    }

  };

  module.exports = TokenizerBase;

}).call(this);
