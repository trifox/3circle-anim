{"version":3,"sources":["../../src/utils/StringUtils.js"],"names":["replaceTemplateVar","str","vars","result","Object","keys","map","key","replace","isCharacterUppercase","character","toUpperCase","camelCaseArray","input","current","parts","i","len","length","push","camelCaseToConstant","substring"],"mappings":";;;;;AAAA,IAAMA,qBAAqB,SAArBA,kBAAqB,CAACC,GAAD,EAAMC,IAAN,EAAe;AACtC;;AAEA,QAAIC,SAASF,GAAb;;AAEAG,WAAOC,IAAP,CAAYH,IAAZ,EACOI,GADP,CACW,UAACC,GAAD,EAAS;AACVJ,iBAASA,OAAOK,OAAP,CAAe,MAAMD,GAArB,EAA0BL,KAAKK,GAAL,CAA1B,CAAT;AACAJ,iBAASA,OAAOK,OAAP,CAAe,MAAMD,GAArB,EAA0BL,KAAKK,GAAL,CAA1B,CAAT;AACAJ,iBAASA,OAAOK,OAAP,CAAe,MAAMD,GAAN,GAAY,GAA3B,EAAgCL,KAAKK,GAAL,CAAhC,CAAT;AACH,KALP;;AAOA;AACA,WAAOJ,MAAP;AACH,CAdD;;AAgBA,IAAMM,uBAAuB,SAAvBA,oBAAuB,CAACC,SAAD,EAAe;AACxC,WAAOA,cAAcA,UAAUC,WAAV,EAArB;AACH,CAFD;AAGA;;;;;;AAMA,IAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAC9B,QAAIC,UAAU,EAAd;;AAEA,QAAIC,QAAQ,EAAZ;AACA,SAAK,IAAIC,IAAI,CAAR,EAAWC,MAAMJ,MAAMK,MAA5B,EAAoCF,IAAIC,GAAxC,EAA6CD,GAA7C,EAAkD;AAC9C,YAAIP,qBAAqBI,MAAMG,CAAN,CAArB,CAAJ,EAAoC;AAChC,gBAAIF,YAAY,EAAhB,EAAoB;AAChBC,sBAAMI,IAAN,CAAWL,QAAQH,WAAR,EAAX;AACH;AACDG,sBAAUD,MAAMG,CAAN,CAAV;AACH,SALD,MAKO;AACHF,uBAAWD,MAAMG,CAAN,CAAX;AACH;AACJ;AACDD,UAAMI,IAAN,CAAWL,QAAQH,WAAR,EAAX;;AAEA,WAAOI,KAAP;AACH,CAjBD;AAkBA,IAAMK,sBAAsB,SAAtBA,mBAAsB,CAACP,KAAD,EAAW;AACnC,QAAIE,QAAQH,eAAeC,KAAf,CAAZ;AACA,QAAIV,SAAS,EAAb;AACA,SAAK,IAAMa,CAAX,IAAgBD,KAAhB,EAAuB;AACnBZ,kBAAUY,MAAMC,CAAN,CAAV;AACAb,kBAAU,GAAV;AACH;AACDA,aAASA,OAAOkB,SAAP,CAAiB,CAAjB,EAAoBlB,OAAOe,MAAP,GAAgB,CAApC,CAAT;AACA;AACA,WAAOf,MAAP;AACH,CAVD;;kBAYc;AACVH,0CADU;AAEVoB;AAFU,C","file":"StringUtils.js","sourcesContent":["const replaceTemplateVar = (str, vars) => {\n    // console.log('Replacing Template String', str, vars)\n\n    var result = str\n\n    Object.keys(vars)\n          .map((key) => {\n              result = result.replace(':' + key, vars[key])\n              result = result.replace('$' + key, vars[key])\n              result = result.replace('{' + key + '}', vars[key])\n          })\n\n    // console.log('Template String result', result)\n    return result\n}\n\nconst isCharacterUppercase = (character) => {\n    return character === character.toUpperCase()\n}\n/*\n helper method for generation of constant names\n\n it splits up a string on every big letter, putting the string together with uppercases and \"_\" in between the word\n */\n\nconst camelCaseArray = (input) => {\n    var current = ''\n\n    var parts = []\n    for (var i = 0, len = input.length; i < len; i++) {\n        if (isCharacterUppercase(input[i])) {\n            if (current !== '') {\n                parts.push(current.toUpperCase())\n            }\n            current = input[i]\n        } else {\n            current += input[i]\n        }\n    }\n    parts.push(current.toUpperCase())\n\n    return parts\n}\nconst camelCaseToConstant = (input) => {\n    var parts = camelCaseArray(input)\n    var result = ''\n    for (const i in parts) {\n        result += parts[i]\n        result += '_'\n    }\n    result = result.substring(0, result.length - 1)\n    // // console.log('Camel Case to Constante ', input, result)\n    return result\n}\n\nexport default{\n    replaceTemplateVar,\n    camelCaseToConstant\n}\n"]}