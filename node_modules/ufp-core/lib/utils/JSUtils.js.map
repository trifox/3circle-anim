{"version":3,"sources":["../../src/utils/JSUtils.js"],"names":["ThrowParam","string","Error","pad","str","padRight","substring","length","slice","factorMethodSkalarArray","fn","param","Array","isArray","map","item","_Includes","collection","value","result","Object","keys","key"],"mappings":";;;;;AAAO,IAAMA,kCAAa,SAAbA,UAAa,CAACC,MAAD,EAAY;AAClC,UAAM,IAAIC,KAAJ,CAAUD,MAAV,CAAN;AACH,CAFM;;AAIP,SAASE,GAAT,CAAaA,GAAb,EAAkBC,GAAlB,EAAuBC,QAAvB,EAAiC;AAC7B,QAAI,OAAOD,GAAP,KAAe,WAAnB,EAAgC;AAC5B,eAAOD,GAAP;AACH;AACD,QAAIE,QAAJ,EAAc;AACV,eAAO,CAACD,MAAMD,GAAP,EAAYG,SAAZ,CAAsB,CAAtB,EAAyBH,IAAII,MAA7B,CAAP;AACH,KAFD,MAEO;AACH,eAAO,CAACJ,MAAMC,GAAP,EAAYI,KAAZ,CAAkB,CAACL,IAAII,MAAvB,CAAP;AACH;AACJ;;AAED,IAAME,0BAA0B,SAA1BA,uBAA0B,CAACC,EAAD,EAAQ;AACpC,WAAO,UAACC,KAAD,EAAW;AACd,YAAIC,MAAMC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACtB;AACAA,kBAAMG,GAAN,CAAU,UAACC,IAAD,EAAU;AAChBL,mBAAGK,IAAH;AACH,aAFD;AAGH,SALD,MAMK;AACD;AACAL,eAAGC,KAAH;AACH;AACJ,KAXD;AAYH,CAbD;;AAeO,IAAMK,gCAAY,SAAZA,SAAY,CAACC,UAAD,EAAaC,KAAb,EAAuB;AAC5C;;AAEA;AACA,QAAIC,SAAS,KAAb;AACAF,eAAWH,GAAX,CAAe,UAACC,IAAD,EAAU;AACrB,YAAIA,SAASG,KAAb,EAAoB;AAChB;AACAC,qBAAS,IAAT;AACH;AACDC,eAAOC,IAAP,CAAYN,IAAZ,EACOD,GADP,CACW,UAACQ,GAAD,EAAS;AACV,gBAAIP,KAAKO,GAAL,MAAcJ,KAAlB,EAAyB;AACrB;AACAC,yBAAS,IAAT;AACH;AACJ,SANP;AAOH,KAZD;AAaA,WAAOA,MAAP;AACH,CAnBM;;kBAqBQ;AACXnB,0BADW;AAEXG,YAFW;AAGXM;;AAHW,C","file":"JSUtils.js","sourcesContent":["export const ThrowParam = (string) => {\n    throw new Error(string)\n}\n\nfunction pad(pad, str, padRight) {\n    if (typeof str === 'undefined') {\n        return pad\n    }\n    if (padRight) {\n        return (str + pad).substring(0, pad.length)\n    } else {\n        return (pad + str).slice(-pad.length)\n    }\n}\n\nconst factorMethodSkalarArray = (fn) => {\n    return (param) => {\n        if (Array.isArray(param)) {\n            // if is array call method for each array item\n            param.map((item) => {\n                fn(item)\n            })\n        }\n        else {\n            // if is no array call method as normal\n            fn(param)\n        }\n    }\n}\n\nexport const _Includes = (collection, value) => {\n    // console.log('_Includes called on:', collection, value, startIndex)\n\n    //  console.log('_Includes lodash returns =>',)\n    var result = false\n    collection.map((item) => {\n        if (item === value) {\n            //    console.log('_Includes return true', item, value)\n            result = true\n        }\n        Object.keys(item)\n              .map((key) => {\n                  if (item[key] === value) {\n                      //    console.log('_Includes return true', key, item[key], value)\n                      result = true\n                  }\n              })\n    })\n    return result\n}\n\nexport default {\n    ThrowParam,\n    pad,\n    factorMethodSkalarArray\n\n}\n"]}