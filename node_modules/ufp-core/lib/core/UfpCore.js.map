{"version":3,"sources":["../../src/core/UfpCore.js"],"names":["store","startedUp","bindSelectors","selectors","result","Object","keys","map","key","params","getState","bindActionCreators","actionCreators","dispatch","getInitialState","initialStateCallbacks","cb","assign","makeRootReducer","reducers","registerReducer","id","reducer","checkStarted","registerMiddleware","middleware","middlewares","push","registerEnhancer","enhancer","console","log","enhancers","registerReducerCreator","reducerCreatorFunction","reducerCreators","registerMiddlewareCreator","middlewareCreatorFunction","middlewareCreators","registerEnhancerCreator","enhancerCreatorFunction","Promise","resolve","UfpCore","registerRunfest","runfest","object","propTypes","doThrow","name","initRunfest","manifests","onRegistered","startup","applicationNameIn","DebugRunfest","require","default","item","enhancerCreators","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","shouldCatchErrors","rootReducer","onConfigure","config","getConfig","boundSelectors","boundActionCreators","onPreStartup","startupAction","registerInitialStateCallback","callback","configure","action","subscribe","listener","replaceReducer","nextReducer","getStore"],"mappings":"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","file":"UfpCore.js","sourcesContent":["import {ThrowParam} from '../utils/JSUtils'\nimport UfpSetup from './UfpSetup'\nimport AdditionsRunfest from './addition/Runfest'\nimport BaseRunfest from './base/Runfest'\nimport UfpConfig from './UfpConfig'\nimport {applyMiddleware, compose, combineReducers, createStore} from 'redux'\nimport RunfestPropype from './proptypes/RunfestPropType'\nimport {CheckPropTypes} from '../utils/ReactPropTypesCheck'\nvar store = null\n\n/**\n *\n * entry points for ufp core v0.1.0 it defines the crucial redux configuration,\n * providing wrapper for reducers middlewares and enhancers\n *\n * they all are called BEFORE the call to startup happens, afterwards an error is thrown\n *\n */\n\nvar startedUp = false\n\nconst bindSelectors = (selectors) => {\n    var result = {}\n\n    if (selectors) {\n        Object.keys(selectors)\n              .map((key) => {\n                  result[key] = (...params) => {\n                      return selectors[key](store.getState(), ...params)\n                  }\n              })\n    }\n\n    return result\n}\n\nconst bindActionCreators = (actionCreators) => {\n    var result = {}\n    if (actionCreators) {\n        Object.keys(actionCreators)\n              .map((key) => {\n                  result[key] = (...params) => {\n                      return store.dispatch(actionCreators[key](...params))\n                  }\n              })\n    }\n    return result\n}\n\n/**\n * here we iterate over all registered initalStateCallback() method,\n * the return values get Object.assign'ed and form the ufp-core\n * initial state\n *\n * warning: it is not meant for initialising reducers those\n * are initialised like normal, it is mean for adjusting\n * state via get params or persisting state in localstorage or\n * whatever :)\n */\nconst getInitialState = () => {\n    var result = {}\n    UfpSetup.initialStateCallbacks.map((cb) => {\n        if (typeof cb === 'function') {\n            result = Object.assign(result, cb())\n        }\n    })\n    return result\n}\n\nexport const makeRootReducer = (reducers) => {\n    /**\n     old method, creating ufp node in state tree, but it is just making problems so keep it in main state\n     return combineReducers({[UfpCoreConstants.STATE_NAME]: combineReducers(reducers)})\n     *\n     */\n    return combineReducers(reducers)\n}\nconst registerReducer = ({\n    id = ThrowParam('Id Required for registerReducer'),\n    reducer = ThrowParam('ReducerRequired for registerReducer')\n\n}) => {\n    checkStarted()\n\n    // allow multi registration, last one wins though\n    // if (UfpSetup.reducers[id]) {\n    //     ThrowParam('Reducer already registered ... ', id, UfpSetup.reducers)\n    // }s\n\n    // console.log('Registering Reducer ', id, reducer)\n    UfpSetup.reducers[id] = {\n        id: id,\n        reducer\n    }\n}\n\nconst registerMiddleware = ({\n    id = ThrowParam('Id Required for registerMiddleware'),\n    middleware = ThrowParam('middleware Required for registerEnhancer')\n\n}) => {\n    checkStarted()\n    // console.log('Registering Middleware ', id, middleware)\n    UfpSetup.middlewares.push({\n        id: id,\n        middleware\n    })\n}\n\nconst registerEnhancer = ({\n    id = ThrowParam('Id Required for registerEnhancer'),\n    enhancer = ThrowParam('enhancer Required for registerEnhancer')\n\n}) => {\n    console.log('Registering enhancer', id, enhancer)\n    checkStarted()\n    UfpSetup.enhancers.push({\n        id: id,\n        enhancer\n    })\n}\n\nconst registerReducerCreator = ({\n    id = ThrowParam('Id Required for registerReducerCreator'),\n    reducerCreatorFunction = ThrowParam('reducerCreatorFunction Required for registerReducerCreator')\n\n}) => {\n    checkStarted()\n    if (UfpSetup.reducers[id]) {\n        ThrowParam('Reducer already registered ... ', id)\n    }\n\n    UfpSetup.reducerCreators[id] = {\n        id,\n        reducerCreatorFunction\n    }\n}\nconst registerMiddlewareCreator = ({\n    id = ThrowParam('Id Required for registerMiddlewareCreator'),\n    middlewareCreatorFunction = ThrowParam('middlewareCreatorFunction Required for registerMiddlewareCreator')\n\n}) => {\n    checkStarted()\n    UfpSetup.middlewareCreators.push({\n        id,\n        middlewareCreatorFunction\n    })\n}\nconst registerEnhancerCreator = ({\n    id = ThrowParam('Id Required for registerEnhancerCreator'),\n    enhancerCreatorFunction = ThrowParam('enhancerCreatorFunction Required for registerEnhancerCreator')\n\n}) => {\n    return new Promise((resolve) => {\n        checkStarted()\n        UfpSetup.reducers.push({\n            id,\n            enhancerCreatorFunction\n        })\n        resolve(UfpCore)\n    })\n}\nconst checkStarted = () => {\n    if (startedUp) {\n        ThrowParam('Ufp Application already started registering no longer possible')\n    }\n}\nconst registerRunfest = (runfest) => {\n    return new Promise((resolve) => {\n        CheckPropTypes({\n            object: runfest,\n            propTypes: RunfestPropype,\n            doThrow: true,\n            name: 'RunfestPropype'\n        })\n        checkStarted()\n        initRunfest(runfest)\n        UfpSetup.manifests.push(runfest)\n        resolve(UfpCore)\n    })\n}\nconst initRunfest = (runfest) => {\n    // call onRegistered only if explicit\n    if (runfest.onRegistered) {\n        // console.log('Calling onRegistered on manifest', UfpCore)\n        runfest.onRegistered({\n            UfpCore\n        })\n    }\n\n    /*\n     fill in dummy bound functions for outputting error notifications\n     when used before startup() is called\n     */\n    // after we created the store, provide bound actioncreators and selectors for ease of use later on\n    // we achieve this by iterating over all registered manifest\n\n    if (runfest.actionCreators) {\n        Object.keys(runfest.actionCreators)\n              .map((key) => {\n                  // extend js object with notification throw error when startup has not been called\n                  // yes its brutal, but convenient\n                  runfest[key] = () => ThrowParam(runfest.name + '.' + key + ' called before ufpCore.startup() ')\n              })\n    }\n\n    if (runfest.selectors) {\n        Object.keys(runfest.selectors)\n              .map((key) => {\n                  // extend js object with notification throw error when startup has not been called\n                  // yes its brutal, but convenient\n                  runfest[key] = () => ThrowParam(runfest.name + '.' + key + ' called before ufpCore.startup() ')\n              })\n    }\n}\n\n/**\n * the startup method ultimately calls up the application and puts everything in place\n * and creates the required redux store ...\n * @param applicationNameIn\n */\nconst startup = ({applicationNameIn = 'Ufp Application'}={applicationNameIn: 'Ufp Application'}) => {\n    return new Promise((resolve) => {\n        checkStarted()\n\n        registerRunfest(AdditionsRunfest)\n        registerRunfest(BaseRunfest)\n\n        // @if UFP_NODE_ENV=='develop'\n        const DebugRunfest = require('./debug/Runfest').default\n        registerRunfest(DebugRunfest)\n        // @endif\n\n        startedUp = true\n        // applicationName = applicationNameIn\n        console.log('UFP Application startup - ', applicationNameIn)\n        const reducers = []\n        Object.keys(UfpSetup.reducers)\n              .map((key) => {\n                  // console.log('Creating Reducer From', key, index, UfpSetup.reducers[key])\n                  reducers[key] = UfpSetup.reducers[key].reducer\n              })\n\n        Object.keys(UfpSetup.reducerCreators)\n              .map((key) => {\n                  // console.log('Creating Reducer From CreatorFunction', key, index)\n                  reducers[key] = UfpSetup.reducerCreators[key].reducerCreatorFunction()\n              })\n\n        const middleware = []\n        UfpSetup.middlewares.map((item) => {\n            middleware.push(item.middleware)\n        })\n        UfpSetup.middlewareCreators.map((item) => {\n            middleware.push(item.middlewareCreatorFunction())\n        })\n\n        // ======================================================\n        // Store Enhancers\n        // ======================================================\n        const enhancers = []\n        UfpSetup.enhancers.map((item) => {\n            enhancers.push(item.enhancer)\n        })\n\n        UfpSetup.enhancerCreators.map((item) => {\n            enhancers.push(item.enhancerCreatorFunction())\n        })\n\n        var composeEnhancers = compose\n\n        // @if UFP_NODE_ENV=='develop'\n        if (typeof window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === 'function') {\n            composeEnhancers =\n                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                    name: 'UFP Application',\n                    shouldCatchErrors: true\n\n                })\n        }\n        // @endif\n        // check dev environment\n\n        const rootReducer = makeRootReducer(reducers)\n        // console.log('Reducers are:', rootReducer)\n        // console.log('middleware are: ', middleware)\n        // console.log('enhancers are:', enhancers)\n\n        store = createStore(\n            rootReducer,\n            // initialstate shall be managed by reducers themselves no direct state initialisation foreseen\n            getInitialState(),\n            composeEnhancers(\n                applyMiddleware(...middleware),\n                ...enhancers\n            )\n        )\n\n        // after we created the store, provide bound actioncreators and selectors for ease of use later on\n        // we achieve this by iterating over all registered manifest\n        UfpSetup.manifests.map((runfest) => {\n            if (runfest.onConfigure) {\n                runfest.onConfigure({\n                    UfpCore,\n                    config: UfpConfig.getConfig({name: runfest.name})\n                })\n            }\n        })\n        UfpSetup.manifests.map((runfest) => {\n            // console.log('Updating runfest')\n            var boundSelectors = bindSelectors(runfest.selectors)\n            var boundActionCreators = bindActionCreators(runfest.actionCreators)\n            Object.keys(boundSelectors)\n                  .map((key) => {\n                      // extend js object of incoming runfest\n                      // yes its brutal, but convenient\n                      // console.log('boundSelectors : ', key, boundSelectors[key])\n                      runfest[key] = boundSelectors[key]\n                  })\n\n            Object.keys(boundActionCreators)\n                  .map((key) => {\n                      // extend js object of incoming runfest\n                      // yes its brutal, but convenient\n                      // console.log('boundActionCreators : ', key, boundActionCreators[key])\n                      runfest[key] = boundActionCreators[key]\n                  })\n        })\n\n        // iterate over all manifests an call 'onPreStartup'\n        Object.keys(UfpSetup.manifests)\n              .map((key) => {\n                  if (UfpSetup.manifests[key] && UfpSetup.manifests[key].onPreStartup) {\n                      UfpSetup.manifests[key].onPreStartup({UfpCore})\n                  }\n              })\n\n        /**\n         * dispatch init action\n         */\n        BaseRunfest.startupAction()\n        resolve(UfpCore)\n    })\n}\n\nconst registerInitialStateCallback = ({\n    callback = ThrowParam('Callback has to be set for registerInitialStateCallback')\n}) => {\n    UfpSetup.initialStateCallbacks.push(callback)\n}\nconst configure = UfpConfig.configure\nconst UfpCore = {\n    registerInitialStateCallback,\n    registerReducer,\n    registerMiddleware,\n    registerEnhancer,\n    registerReducerCreator,\n    registerMiddlewareCreator,\n    registerEnhancerCreator,\n    registerRunfest,\n    configure,\n    startup,\n\n    // wrapping of redux store\n    getState: () => {\n        return store.getState()\n    },\n\n    dispatch: (action) => {\n        return store.dispatch(action)\n    },\n\n    subscribe: (listener) => {\n        return store.subscribe(listener)\n    },\n\n    replaceReducer: (nextReducer) => {\n        return store.replaceReducer(nextReducer)\n    },\n    getStore: () => {\n        return store\n    }\n\n}\nexport default UfpCore\n"]}