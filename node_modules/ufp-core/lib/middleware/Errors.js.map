{"version":3,"sources":["../../src/middleware/Errors.js"],"names":["InvalidUFPAction","validationErrors","name","message","Error","UfpMiddlewareRequestCancelledError","UfpMiddlewareMaxRetryReachedError","UfpMiddlewareResulthandlerMoreThenOneSuccessError","InternalError","RequestError","ApiError","status","statusText","response","ResultParserError"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;IAOMA,gB;;;AAEJ,4BAAYC,gBAAZ,EAA8B;AAAA;;AAAA;;AAE5B,UAAKC,IAAL,GAAY,kBAAZ;AACA,UAAKC,OAAL,GAAe,mBAAf;AACA,UAAKF,gBAAL,GAAwBA,gBAAxB;AAJ4B;AAK7B;;;EAP4BG,K;;AAW/B;;;;;;;;;IAOMC,kC;;;AAEJ,gDAAc;AAAA;;AAAA;;AAEZ,WAAKH,IAAL,GAAY,oCAAZ;AACA,WAAKC,OAAL,GAAe,gCAAf;AAHY;AAIb;;;EAN8CC,K;;AAUjD;;;;;;;;IAMME,iC;;;AAEJ,+CAAc;AAAA;;AAAA;;AAEZ,WAAKJ,IAAL,GAAY,mCAAZ;AACA,WAAKC,OAAL,GAAe,yCAAf;AAHY;AAIb;;;EAN6CC,K;;AAUhD;;;;;;;;IAMMG,iD;;;AAEJ,+DAAc;AAAA;;AAAA;;AAEZ,WAAKL,IAAL,GAAY,mDAAZ;AACA,WAAKC,OAAL,GAAe,mDAAf;AAHY;AAIb;;;EAN6DC,K;AAShE;;;;;;;;;IAOMI,a;;;AAEJ,yBAAYL,OAAZ,EAAqB;AAAA;;AAAA;;AAEnB,WAAKD,IAAL,GAAY,eAAZ;AACA,WAAKC,OAAL,GAAeA,OAAf;AAHmB;AAIpB;;;EANyBC,K;;AAU5B;;;;;;;;;IAOMK,Y;;;AAEJ,wBAAYN,OAAZ,EAAqB;AAAA;;AAAA;;AAEnB,WAAKD,IAAL,GAAY,cAAZ;AACA,WAAKC,OAAL,GAAeA,OAAf;AAHmB;AAIpB;;;EANwBC,K;;AAU3B;;;;;;;;;;;;IAUMM,Q;;;AAEJ,oBAAYC,MAAZ,EAAoBC,UAApB,EAAgCC,QAAhC,EAA0C;AAAA;;AAAA;;AAExC,WAAKX,IAAL,GAAY,UAAZ;AACA,WAAKS,MAAL,GAAcA,MAAd;AACA,WAAKC,UAAL,GAAkBA,UAAlB;AACA,WAAKC,QAAL,GAAgBA,QAAhB;AACA,WAAKV,OAAL,GAAkBQ,MAAlB,WAA8BC,UAA9B;AANwC;AAOzC;;;EAToBR,K;;IAajBU,iB;;;AAEJ,6BAAYX,OAAZ,EAAqB;AAAA;;AAAA;;AAEnB,WAAKD,IAAL,GAAY,mBAAZ;AACA,WAAKC,OAAL,GAAeA,OAAf;AAHmB;AAIpB;;;EAN6BC,K;;QAW9BJ,gB,GAAAA,gB;QACAK,kC,GAAAA,kC;QACAC,iC,GAAAA,iC;QACAC,iD,GAAAA,iD;QACAC,a,GAAAA,a;QACAC,Y,GAAAA,Y;QACAC,Q,GAAAA,Q;QACAI,iB,GAAAA,iB;kBAGa;AACbd,oCADa;AAEbK,wEAFa;AAGbC,sEAHa;AAIbC,sGAJa;AAKbC,8BALa;AAMbC,4BANa;AAObC,oBAPa;AAQbI;AARa,C","file":"Errors.js","sourcesContent":["/**\n * Error class for an UFPAction that does not conform to the UFPAction definition\n *\n * @class InvalidUFPAction\n * @access public\n * @param {array} validationErrors - an array of validation errors\n */\nclass InvalidUFPAction extends Error {\n\n  constructor(validationErrors) {\n    super()\n    this.name = 'InvalidUFPAction'\n    this.message = 'Invalid UFPAction'\n    this.validationErrors = validationErrors\n  }\n\n}\n\n/**\n * Error class for an error resolved by action promise when Request cancelled by Prehandler\n *\n * @class UfpMiddlewareRequestCancelledError\n * @access public\n * @param {string} message - the error message\n */\nclass UfpMiddlewareRequestCancelledError extends Error {\n\n  constructor() {\n    super()\n    this.name = 'UfpMiddlewareRequestCancelledError'\n    this.message = 'UfpMiddlewareRequest Cancelled'\n  }\n\n}\n\n/**\n * Error class for an error when max retry reached\n *\n * @class UfpMiddlewareMaxRetryReachedError\n * @access public\n */\nclass UfpMiddlewareMaxRetryReachedError extends Error {\n\n  constructor() {\n    super()\n    this.name = 'UfpMiddlewareMaxRetryReachedError'\n    this.message = 'UfpMiddleware reached the maxRetryCount'\n  }\n\n}\n\n/**\n * Error class for an error when max retry reached\n *\n * @class UfpMiddlewareMaxRetryReachedError\n * @access public\n */\nclass UfpMiddlewareResulthandlerMoreThenOneSuccessError extends Error {\n\n  constructor() {\n    super()\n    this.name = 'UfpMiddlewareResulthandlerMoreThenOneSuccessError'\n    this.message = 'UfpMiddlewareResulthandlerMoreThenOneSuccessError'\n  }\n\n}\n/**\n * Error class for a custom `payload` or `meta` function throwing\n *\n * @class InternalError\n * @access public\n * @param {string} message - the error message\n */\nclass InternalError extends Error {\n\n  constructor(message) {\n    super()\n    this.name = 'InternalError'\n    this.message = message\n  }\n\n}\n\n/**\n * Error class for an error raised trying to make an API call\n *\n * @class RequestError\n * @access public\n * @param {string} message - the error message\n */\nclass RequestError extends Error {\n\n  constructor(message) {\n    super()\n    this.name = 'RequestError'\n    this.message = message\n  }\n\n}\n\n/**\n * Error class for an API response outside the 200 range\n *\n * @class ApiError\n * @access public\n * @param {number} status - the status code of the API response\n * @param {string} statusText - the status text of the API response\n * @param {object} response - the parsed JSON response of the API server if the\n *  'Content-Type' header signals a JSON response\n */\nclass ApiError extends Error {\n\n  constructor(status, statusText, response) {\n    super()\n    this.name = 'ApiError'\n    this.status = status\n    this.statusText = statusText\n    this.response = response\n    this.message = `${status} - ${statusText}`\n  }\n\n}\n\nclass ResultParserError extends Error {\n\n  constructor(message) {\n    super()\n    this.name = 'ResultParserError'\n    this.message = message\n  }\n\n}\n\nexport {\n  InvalidUFPAction,\n  UfpMiddlewareRequestCancelledError,\n  UfpMiddlewareMaxRetryReachedError,\n  UfpMiddlewareResulthandlerMoreThenOneSuccessError,\n  InternalError,\n  RequestError,\n  ApiError,\n  ResultParserError\n}\n\nexport default {\n  InvalidUFPAction,\n  UfpMiddlewareRequestCancelledError,\n  UfpMiddlewareMaxRetryReachedError,\n  UfpMiddlewareResulthandlerMoreThenOneSuccessError,\n  InternalError,\n  RequestError,\n  ApiError,\n  ResultParserError\n}\n"]}