{"version":3,"sources":["../../src/middleware/QueryParams.js"],"names":["isArray","isObject","isDate","encode","val","encodeURIComponent","replace","toString","Object","prototype","call","QueryParams","params","parts","keys","map","k","value","key","v","toISOString","JSON","stringify","push","join"],"mappings":";;;;;;;;;;QAkBgBA,O,GAAAA,O;QAUAC,Q,GAAAA,Q;QAUAC,M,GAAAA,M;;;;AAtChB,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnB,SAAOC,mBAAmBD,GAAnB,EACJE,OADI,CACI,OADJ,EACa,GADb,EAEJA,OAFI,CAEI,OAFJ,EAEa,GAFb,EAGJA,OAHI,CAGI,MAHJ,EAGY,GAHZ,EAIJA,OAJI,CAII,OAJJ,EAIa,GAJb,EAKJA,OALI,CAKI,MALJ,EAKY,GALZ,EAMJA,OANI,CAMI,OANJ,EAMa,GANb,EAOJA,OAPI,CAOI,OAPJ,EAOa,GAPb,CAAP;AAQD;;AAED,IAAIC,WAAWC,OAAOC,SAAP,CAAiBF,QAAhC;AACA;;;;;;AAMO,SAASP,OAAT,CAAiBI,GAAjB,EAAsB;AAC3B,SAAOG,SAASG,IAAT,CAAcN,GAAd,MAAuB,gBAA9B;AACD;;AAED;;;;;;AAMO,SAASH,QAAT,CAAkBG,GAAlB,EAAuB;AAC5B,SAAOA,QAAQ,IAAR,IAAgB,QAAOA,GAAP,uDAAOA,GAAP,OAAe,QAAtC;AACD;;AAED;;;;;;AAMO,SAASF,MAAT,CAAgBE,GAAhB,EAAqB;AAC1B,SAAOG,SAASG,IAAT,CAAcN,GAAd,MAAuB,eAA9B;AACD;;AAED;;;;;;AAMA,SAASO,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,MAAIC,QAAQ,EAAZ;AACAL,SAAOM,IAAP,CAAYF,MAAZ,EACOG,GADP,CACW,UAACC,CAAD,EAAO;AACV,QAAIC,QAAQL,OAAOI,CAAP,CAAZ;AACA,QAAIE,MAAMF,CAAV;AACA,QAAIC,UAAU,IAAV,IAAkB,OAAOA,KAAP,KAAiB,WAAvC,EAAoD;AAClD;AACD;AACD,QAAIjB,QAAQiB,KAAR,CAAJ,EAAoB;AAClBC,YAAMA,MAAM,IAAZ;AACD,KAFD,MAEO;AACLD,cAAQ,CAACA,KAAD,CAAR;AACD;AACDA,UAAMF,GAAN,CAAU,UAACI,CAAD,EAAO;AACf,UAAIjB,OAAOiB,CAAP,CAAJ,EAAe;AACbA,YAAIA,EAAEC,WAAF,EAAJ;AACD,OAFD,MAEO,IAAInB,SAASkB,CAAT,CAAJ,EAAiB;AACtBA,YAAIE,KAAKC,SAAL,CAAeH,CAAf,CAAJ;AACD;AACDN,YAAMU,IAAN,CAAWpB,OAAOe,GAAP,IAAc,GAAd,GAAoBf,OAAOgB,CAAP,CAA/B;AACD,KAPD;AAQD,GApBP;AAqBA,SAAON,MAAMW,IAAN,CAAW,GAAX,CAAP;AACD;;kBAEcb,W","file":"QueryParams.js","sourcesContent":["function encode(val) {\n  return encodeURIComponent(val)\n    .replace(/%40/gi, '@')\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']')\n}\n\nvar toString = Object.prototype.toString\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nexport function isArray(val) {\n  return toString.call(val) === '[object Array]'\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nexport function isObject(val) {\n  return val !== null && typeof val === 'object'\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nexport function isDate(val) {\n  return toString.call(val) === '[object Date]'\n}\n\n/**\n * serialize queryParams like Axios\n *\n * @param {Object} val The value to test\n *\n */\nfunction QueryParams(params) {\n  var parts = []\n  Object.keys(params)\n        .map((k) => {\n          var value = params[k]\n          var key = k\n          if (value === null || typeof value === 'undefined') {\n            return\n          }\n          if (isArray(value)) {\n            key = key + '[]'\n          } else {\n            value = [value]\n          }\n          value.map((v) => {\n            if (isDate(v)) {\n              v = v.toISOString()\n            } else if (isObject(v)) {\n              v = JSON.stringify(v)\n            }\n            parts.push(encode(key) + '=' + encode(v))\n          })\n        })\n  return parts.join('&')\n}\n\nexport default QueryParams\n"]}