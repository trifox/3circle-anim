{"version":3,"sources":["../../../../src/modules/intl/components/UfpIntlProvider.jsx"],"names":["UfpIntlProvider","randomKey","locale","messages","children","console","log","propTypes","object","isRequired","string","number","defaultProps","mapStateToProps","state","CurrentLanguageSelector","CurrentLanguageMessagesSelector","randomIntlKey"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,kBAAkB,SAAlBA,eAAkB,OAA6C;AAAA,QAA3CC,SAA2C,QAA3CA,SAA2C;AAAA,QAAhCC,MAAgC,QAAhCA,MAAgC;AAAA,QAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,QAAdC,QAAc,QAAdA,QAAc;;AACjEC,YAAQC,GAAR,CAAY,yBAAZ,EAAuCJ,MAAvC,EAA+CC,QAA/C,EAAyDF,SAAzD;AACA,WACI;AAAA;AAAA,UAAc,KAAKA,SAAnB;AACc,oBAAQC,MADtB;AAEc,sBAAUC;AAFxB;AAIKC;AAJL,KADJ;AAQH,CAVD;;AAYAJ,gBAAgBO,SAAhB,GAA4B;AACxBH,cAAU,oBAAUI,MAAV,CAAiBC,UADH;AAExBP,YAAQ,oBAAUQ,MAAV,CAAiBD,UAFD;AAGxBN,cAAU,oBAAUK,MAHI;AAIxBP,eAAW,oBAAUU,MAAV,CAAiBF;AAJJ,CAA5B;;AAOAT,gBAAgBY,YAAhB,GAA+B;AAC3BT,cAAU;AADiB,CAA/B;;AAIA,IAAMU,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD;AAAA,WAAY;AAChCZ,gBAAQ,wBAAca,uBAAd,CAAsCD,KAAtC,CADwB;AAEhCX,kBAAU,wBAAca,+BAAd,CAA8CF,KAA9C,CAFsB;AAGhCb,mBAAW,wBAAcgB,aAAd,CAA4BH,KAA5B;AAHqB,KAAZ;AAAA,CAAxB;;kBAMe,yBAAQD,eAAR,EAAyBb,eAAzB,C","file":"UfpIntlProvider.js","sourcesContent":["import PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {IntlProvider} from 'react-intl'\nimport React from 'react'\nimport IntlSelectors from '../IntlSelectors'\n\nconst UfpIntlProvider = ({randomKey, locale, messages, children}) => {\n    console.log('Intl Provider rendering', locale, messages, randomKey)\n    return (\n        <IntlProvider key={randomKey}\n                      locale={locale}\n                      messages={messages}\n        >\n            {children}\n        </IntlProvider>\n    )\n}\n\nUfpIntlProvider.propTypes = {\n    children: PropTypes.object.isRequired,\n    locale: PropTypes.string.isRequired,\n    messages: PropTypes.object,\n    randomKey: PropTypes.number.isRequired\n}\n\nUfpIntlProvider.defaultProps = {\n    messages: {}\n}\n\nconst mapStateToProps = (state) => ({\n    locale: IntlSelectors.CurrentLanguageSelector(state),\n    messages: IntlSelectors.CurrentLanguageMessagesSelector(state),\n    randomKey: IntlSelectors.randomIntlKey(state)\n})\n\nexport default connect(mapStateToProps)(UfpIntlProvider)\n"]}