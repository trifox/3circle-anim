{"version":3,"sources":["../../../src/modules/startup/StartupEpic.js"],"names":["startupInit","action$","filter","action","type","ACTION_NAMES","STARTUP","mapTo","initialiseApplication","startupStep","store","ActionConstants","UFP_STARTUP_NEXT_STAGE","totalStageCount","TotalStagesSelector","getState","currentStageIndex","CurrentStageIndexSelector","currentStagePercentage","StagePercentageSelector","dispatch","loadStage","takeUntil","ofType","UFP_STARTUP_FINISHED","startupFinish","UFP_STARTUP_NO_STEPS","appInitialised","AppInitialisedSelector","payload"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc,SAAdA,WAAc,CAACC,OAAD,EAAa;AAC7B,WAAOA,QAAQC,MAAR,CAAe,UAACC,MAAD;AAAA,eAAYA,OAAOC,IAAP,KAAgB,2BAAiBC,YAAjB,CAA8BC,OAA1D;AAAA,KAAf,EACQC,KADR,CAEW,gCAAsBC,qBAAtB,EAFX,CAAP;AAIH,CALD;AAMA,IAAMC,cAAc,SAAdA,WAAc,CAACR,OAAD,EAAUS,KAAV,EAAoB;AACpC;AACA,WAAOT,QAAQC,MAAR,CAAe,UAACC,MAAD,EAAY;AAC9B;AACA,YAAIA,OAAOC,IAAP,KAAgB,2BAAiBO,eAAjB,CAAiCC,sBAArD,EAA6E;AACzE,gBAAIC,kBAAkB,2BAAiBC,mBAAjB,CAAqCJ,MAAMK,QAAN,EAArC,CAAtB;AACA,gBAAIC,oBAAoB,2BAAiBC,yBAAjB,CAA2CP,MAAMK,QAAN,EAA3C,CAAxB;AACA,gBAAIG,yBAAyB,2BAAiBC,uBAAjB,CAAyCT,MAAMK,QAAN,EAAzC,CAA7B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAIG,0BAA0B,GAA1B,IAAkCF,oBAAoB,CAArB,KAA4BH,eAAjE,EAAkF;AAC9E,uBAAO,IAAP,CAD8E,CAClE;AACf;AACJ;AACD,eAAO,KAAP;AACH,KAhBM,EAiBQN,KAjBR,CAiBc,UAACa,QAAD,EAAWL,QAAX,EAAwB;AAC3B,YAAIC,oBAAoB,2BAAiBC,yBAAjB,CAA2CF,UAA3C,CAAxB;AACA;AACA;AACAK,iBAAS,gCAAsBC,SAAtB,CAAgCL,oBAAoB,CAApD,CAAT;AACH,KAtBR,EAuBQM,SAvBR,CAuBkBrB,QAAQsB,MAAR,CAAe,2BAAiBZ,eAAjB,CAAiCa,oBAAhD,CAvBlB,CAAP;AAwBH,CA1BD;;AA4BA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACxB,OAAD,EAAUS,KAAV,EAAoB;AACtC;AACA,WAAOT,QAAQC,MAAR,CAAe,UAACC,MAAD,EAAY;AAC9B;AACA,YAAIA,OAAOC,IAAP,KAAgB,2BAAiBO,eAAjB,CAAiCe,oBAArD,EAA2E;AACvE;AACA,mBAAO,IAAP;AACH,SAHD,MAGO;AACH,gBAAIC,iBAAiB,2BAAiBC,sBAAjB,CAAwClB,MAAMK,QAAN,EAAxC,CAArB;AACA,gBAAIF,kBAAkB,2BAAiBC,mBAAjB,CAAqCJ,MAAMK,QAAN,EAArC,CAAtB;AACA,gBAAIC,oBAAoB,2BAAiBC,yBAAjB,CAA2CP,MAAMK,QAAN,EAA3C,CAAxB;AACA,gBAAIG,yBAAyB,2BAAiBC,uBAAjB,CAAyCT,MAAMK,QAAN,EAAzC,CAA7B;;AAEA;;AAEA,gBAAIG,0BAA0B,GAA1B,IAAkCF,oBAAoB,CAArB,KAA4BH,eAA7D,IAAgF,CAACc,cAArF,EAAqG;AACjG;AACA,uBAAO,IAAP,CAFiG,CAErF;AACf;AACD,mBAAO,KAAP;AACH;AACJ,KAnBM,EAoBQpB,KApBR,CAoBc,UAACa,QAAD,EAAWL,QAAX,EAAwB;AACvBK,iBAAS;AACLhB,kBAAM,2BAAiBO,eAAjB,CAAiCa,oBADlC;AAELK,qBAAS;AACLd,0BAAUA;AADL;AAFJ,SAAT;AAMH,KA3BZ,EA6BQO,SA7BR,CA6BkBrB,QAAQsB,MAAR,CAAe,2BAAiBZ,eAAjB,CAAiCa,oBAAhD,CA7BlB,CAAP;AA8BH,CAhCD;;kBAkCe;AACXf,4BADW;AAEXgB,gCAFW;AAGXzB;AAHW,C","file":"StartupEpic.js","sourcesContent":["import UfpCoreConstants from '../../core/UfpCoreConstants'\nimport StartupConstants from './StartupConstants'\nimport StartupSelectors from './StartupSelectors'\nimport StartupActionCreators from './StartupActionCreators'\n\nconst startupInit = (action$) => {\n    return action$.filter((action) => action.type === UfpCoreConstants.ACTION_NAMES.STARTUP)\n                  .mapTo(\n                      StartupActionCreators.initialiseApplication()\n                  )\n}\nconst startupStep = (action$, store) => {\n    //console.log('startupStep Epic Action called ', action$, store)\n    return action$.filter((action) => {\n        // console.log('startupStep Epic Action called state:', store.getState())\n        if (action.type !== StartupConstants.ActionConstants.UFP_STARTUP_NEXT_STAGE) {\n            var totalStageCount = StartupSelectors.TotalStagesSelector(store.getState())\n            var currentStageIndex = StartupSelectors.CurrentStageIndexSelector(store.getState())\n            var currentStagePercentage = StartupSelectors.StagePercentageSelector(store.getState())\n            // console.log('startupStep Epic Action called ', {\n            //     totalStageCount,\n            //     currentStageIndex,\n            //     currentStagePercentage\n            // })\n            if (currentStagePercentage >= 100 && (currentStageIndex + 1) !== totalStageCount) {\n                return true //stage finished and is not last stage\n            }\n        }\n        return false\n    })\n                  .mapTo((dispatch, getState) => {\n                      var currentStageIndex = StartupSelectors.CurrentStageIndexSelector(getState())\n                      // console.log('startupstep finished stage:', currentStageIndex)\n                      // console.log('Startupstep load next stage:', currentStageIndex + 1)\n                      dispatch(StartupActionCreators.loadStage(currentStageIndex + 1))\n                  })\n                  .takeUntil(action$.ofType(StartupConstants.ActionConstants.UFP_STARTUP_FINISHED))\n}\n\nconst startupFinish = (action$, store) => {\n    // console.log('startupFinish Epic Action called ', action$)\n    return action$.filter((action) => {\n        // console.log('startupFinish Epic Action called ', store.getState())\n        if (action.type === StartupConstants.ActionConstants.UFP_STARTUP_NO_STEPS) {\n            // console.log('startupFinish Epic Action called return TRUE - no steps registered')\n            return true\n        } else {\n            var appInitialised = StartupSelectors.AppInitialisedSelector(store.getState())\n            var totalStageCount = StartupSelectors.TotalStagesSelector(store.getState())\n            var currentStageIndex = StartupSelectors.CurrentStageIndexSelector(store.getState())\n            var currentStagePercentage = StartupSelectors.StagePercentageSelector(store.getState())\n\n            // console.log('startupFinish Epic Action called return TRUE - no steps registered', appInitialised, totalStageCount, currentStageIndex, currentStagePercentage)\n\n            if (currentStagePercentage >= 100 && (currentStageIndex + 1) === totalStageCount && !appInitialised) {\n                // console.log('startupFinish Epic Action called return TRUE')\n                return true //stage finished and is last stage\n            }\n            return false\n        }\n    })\n                  .mapTo((dispatch, getState) => {\n                          dispatch({\n                              type: StartupConstants.ActionConstants.UFP_STARTUP_FINISHED,\n                              payload: {\n                                  getState: getState\n                              }\n                          })\n                      }\n                  )\n                  .takeUntil(action$.ofType(StartupConstants.ActionConstants.UFP_STARTUP_FINISHED))\n}\n\nexport default {\n    startupStep,\n    startupFinish,\n    startupInit\n}\n"]}