{"version":3,"sources":["../../../src/modules/menu/MenuInternalUtils.js"],"names":["findPathForMenuId","object","id","tempResult","area","subarea","findPathForMenuIdTravers","items","join","currentPath","index","item","path","value","children","undefined","Array","isArray","createRandomId","Math","round","random","sortAllChildren","menuEntry","sortFunction","a","b","sortIndex","sort","i"],"mappings":";;;;;AAAA,IAAMA,oBAAoB,SAApBA,iBAAoB,CAACC,MAAD,EAASC,EAAT,EAAgB;AACxC,MAAIC,UAAJ;AACA;AACA,OAAK,IAAIC,IAAT,IAAiBH,MAAjB,EAAyB;AAAE;AACzB,SAAK,IAAII,OAAT,IAAoBJ,OAAOG,IAAP,CAApB,EAAkC;AAAE;AAClC;AACAD,mBAAaG,yBAAyBL,OAAOG,IAAP,EAAaC,OAAb,EAAsBE,KAA/C,EAAsDL,EAAtD,EAA0D,CAACE,IAAD,EAAOC,OAAP,EAAgB,OAAhB,EAAyBG,IAAzB,CAA8B,GAA9B,CAA1D,CAAb;AACA,UAAIL,cAAc,IAAlB,EAAwB;AACtB,eAAOA,UAAP;AACD;AACF;AACF;AACD;AACA,SAAO,IAAP;AACD,CAdD;;AAgBA,IAAMG,2BAA2B,SAA3BA,wBAA2B,CAACC,KAAD,EAAQL,EAAR,EAAYO,WAAZ,EAA4B;AAC3D,OAAK,IAAIC,KAAT,IAAkBH,KAAlB,EAAyB;AACvB,QAAII,OAAOJ,MAAMG,KAAN,CAAX;AACA,QAAIC,KAAKT,EAAL,KAAYA,EAAhB,EAAoB;AAClB;AACA,aAAO;AACLU,cAAMH,cAAc,GAAd,GAAoBC,KADrB;AAELG,eAAOF;AAFF,OAAP;AAID;AACD,QAAIA,KAAKG,QAAL,KAAkBC,SAAlB,IAA+BC,MAAMC,OAAN,CAAcN,KAAKG,QAAnB,CAAnC,EAAiE;AAC/D,UAAIX,aAAaG,yBAAyBK,KAAKG,QAA9B,EAAwCZ,EAAxC,EAA4CO,cAAc,GAAd,GAAoBC,KAApB,GAA4B,GAA5B,GAAkC,UAA9E,CAAjB;AACA,UAAIP,cAAc,IAAlB,EAAwB;AACtB,eAAOA,UAAP;AACD;AACF;AACF;AACD,SAAO,IAAP;AACD,CAlBD;;AAoBA,IAAMe,iBAAiB,SAAjBA,cAAiB,GAAM;AAC3B,SAAOC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,MAA3B,IAAqC,GAArC,GACLF,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,MAA3B,CADK,GACgC,GADhC,GAELF,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,MAA3B,CAFF;AAGD,CAJD;;AAMA;AACA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,SAAD,EAAe;AACrC,MAAMC,eAAe,SAAfA,YAAe,CAACC,CAAD,EAAIC,CAAJ;AAAA,WAAWD,EAAEE,SAAF,GAAcD,EAAEC,SAA3B;AAAA,GAArB;AACAJ,YAAUT,QAAV,GAAqBS,UAAUT,QAAV,CAAmBc,IAAnB,CAAwBJ,YAAxB,CAArB;AACA,OAAK,IAAIK,CAAT,IAAcN,UAAUT,QAAxB,EAAkC;AAChCQ,oBAAgBC,UAAUT,QAAV,CAAmBe,CAAnB,CAAhB;AACD;AACF,CAND;;kBAQe;AACbP,kCADa;AAEbJ,gCAFa;AAGblB;AAHa,C","file":"MenuInternalUtils.js","sourcesContent":["const findPathForMenuId = (object, id) => {\n  var tempResult\n  //console.log('findPathForMenuId start ', object, id)\n  for (var area in object) { //iterate areas\n    for (var subarea in object[area]) { //iterate subareas\n      //console.log('findPathForMenuId subarea items', object[area][subarea].items)\n      tempResult = findPathForMenuIdTravers(object[area][subarea].items, id, [area, subarea, 'items'].join('.'))\n      if (tempResult != null) {\n        return tempResult\n      }\n    }\n  }\n  //console.log('findPathForId notfound ', object, id)\n  return null\n}\n\nconst findPathForMenuIdTravers = (items, id, currentPath) => {\n  for (var index in items) {\n    var item = items[index]\n    if (item.id === id) {\n      //console.log('findPathForId yeah found ', item, id, currentPath + '.' + index)\n      return {\n        path: currentPath + '.' + index,\n        value: item\n      }\n    }\n    if (item.children !== undefined && Array.isArray(item.children)) {\n      var tempResult = findPathForMenuIdTravers(item.children, id, currentPath + '.' + index + '.' + 'children')\n      if (tempResult != null) {\n        return tempResult\n      }\n    }\n  }\n  return null\n}\n\nconst createRandomId = () => {\n  return Math.round(Math.random() * 100000) + '-' +\n    Math.round(Math.random() * 100000) + '-' +\n    Math.round(Math.random() * 100000)\n}\n\n// utility method to sort every menu entry by sortIndex\nconst sortAllChildren = (menuEntry) => {\n  const sortFunction = (a, b) => (a.sortIndex - b.sortIndex)\n  menuEntry.children = menuEntry.children.sort(sortFunction)\n  for (var i in menuEntry.children) {\n    sortAllChildren(menuEntry.children[i])\n  }\n}\n\nexport default {\n  sortAllChildren,\n  createRandomId,\n  findPathForMenuId\n}\n"]}