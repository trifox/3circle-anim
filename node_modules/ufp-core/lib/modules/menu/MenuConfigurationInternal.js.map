{"version":3,"sources":["../../../src/modules/menu/MenuConfigurationInternal.js"],"names":["EmptyFunc","MenuConfigurationInternal","MenuDefinition","MenuData","registerMenuReducer","area","sortIndex","subArea","actionName","actionNames","actionHandler","initialState","Error","items","menuDef","MENU_ACTION_SUFFIX","Array","isArray","map","currentActionName","undefined","push","Object","assign","epic","createEpicTransformActionToMenuAction","getMenuData","getMenuDefinition","open","component","ThrowParam","href","styleClass","hash","highLight","callback","children","id","createRandomId"],"mappings":"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","file":"MenuConfigurationInternal.js","sourcesContent":["import MenuConstants from './MenuConstants'\nimport {registerEpic} from '../epic'\nimport MenuActionEpicCreator from './epics/MenuActionEpicCreator'\nimport JSUtils from '../../utils/JSUtils'\nimport MenuInternalUtils from './MenuInternalUtils'\nconst EmptyFunc = () => {\n}\n\nclass MenuConfigurationInternal {\n\n    MenuDefinition = []\n    MenuData = {}\n\n    createMenuEntry({\n        open = false,\n        sortIndex = 0,\n        component = JSUtils.ThrowParam('react component has to be set'),\n        href,\n        styleClass,\n        hash,\n        highLight,\n        callback = EmptyFunc,\n        children = []\n    }) {\n        return {\n            id: MenuInternalUtils.createRandomId(),\n            hash,\n            open,\n            styleClass,\n            component,\n            sortIndex,\n            highLight,\n            href,\n            callback,\n            children\n        }\n    }\n\n    registerMenuReducer = ({\n        area = 'main',\n        sortIndex = -1,\n        subArea,\n        actionName,\n        actionNames = [],\n        actionHandler,\n        initialState = []\n    }) => {\n        //console.log('MenuConfigurator registerMenuReducer', arguments)\n        //console.log('MenuConfigurator registerMenuReducer', area, actionNames,\n        // actionHandler, initialState)\n\n        if (!subArea) {\n            throw new Error('UFP Menu Configuration SubArea needs to be defined')\n        }\n        // // console.log('Register Menu Reducer called ', area, actionNames,\n        // actionHandler, actionName)\n\n        // create an empty place for the menu reducer to live in\n        if (!this.MenuData[area]) {\n            this.MenuData[area] = {}\n        }\n\n        if (!this.MenuData[area][subArea]) {\n            this.MenuData[area][subArea] = {}\n            this.MenuData[area][subArea].items = initialState\n            this.MenuData[area][subArea].sortIndex = sortIndex\n        }\n        var menuDef = ({\n            // todo/fixme: generalize/centralize generation of ufp id objects!\n            area,\n            sortIndex,\n            actionName: actionName + MenuConstants.MENU_ACTION_SUFFIX,\n            subArea,\n            initialState,\n            actionHandler\n        })\n        // append to menu definition hash using action name as key for quick access to\n        // the action handler\n\n        //\n\n        if (Array.isArray(actionNames)) {\n            // for quick reference put all original action names into handled actions to be found\n            // easily by menureducer to defer its call to the ones renamed in the menu entry\n            actionNames.map((currentActionName) => {\n                // // console.log('Register Menu Reducer called adding item ', currentActionName)\n                if (this.MenuDefinition[currentActionName] === undefined) {\n                    this.MenuDefinition[currentActionName] = []\n                }\n                this.MenuDefinition[currentActionName].push(Object.assign({}, menuDef,\n                    {actionName: currentActionName + MenuConstants.MENU_ACTION_SUFFIX}))\n                /**\n                 * create and register an epic of the form: action->action_Menu meaning that\n                 * the list of actions is going to get\n                 * transformed with the menu suffix, this is handled as before just that no UfpActor\n                 * is needed to watch over the state\n                 *\n                 */\n                registerEpic({\n                    epic: MenuActionEpicCreator.createEpicTransformActionToMenuAction(currentActionName)\n                })\n            })\n        }\n        if (actionName) {\n            // // console.log('Register Menu Reducer called adding item single', actionName)\n            if (this.MenuDefinition[actionName] === undefined) {\n                this.MenuDefinition[actionName] = []\n            }\n            this.MenuDefinition[actionName].push(menuDef)\n            registerEpic({\n                epic: MenuActionEpicCreator.createEpicTransformActionToMenuAction(actionName)\n            })\n        }\n    }\n    getMenuData = () => {\n        return this.MenuData\n    }\n    getMenuDefinition = () => {\n        return this.MenuDefinition\n    }\n\n}\nexport default new MenuConfigurationInternal()\n"]}