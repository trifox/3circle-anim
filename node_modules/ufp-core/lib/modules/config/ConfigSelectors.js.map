{"version":3,"sources":["../../../src/modules/config/ConfigSelectors.js"],"names":["getReducerState","state","getUfpState","NAME","getConfigValue","globalState","key","area","DEFAULT_AREA","defaultValue","undefined","data"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD;AAAA,WAAW,2BAAiBC,WAAjB,CAA6BD,KAA7B,EAAoC,0BAAgBE,IAApD,CAAX;AAAA,CAAxB;;kBAEe;AACXC,oBAAgB,wBAACC,WAAD,QAKV;AAAA,4BAJFC,GAIE;AAAA,YAJFA,GAIE,4BAJI,yBAAW,0BAAX,CAIJ;AAAA,6BAHFC,IAGE;AAAA,YAHFA,IAGE,6BAHK,0BAAgBC,YAGrB;AAAA,qCAFFC,YAEE;AAAA,YAFFA,YAEE,qCAFaC,SAEb;;AACF;AACA,YAAMT,QAAQD,gBAAgBK,WAAhB,EAA6BM,IAA3C;AACA;AACA,eAAOV,SAASA,MAAMM,IAAN,CAAT,GAAuBN,MAAMM,IAAN,EAAYD,GAAZ,CAAvB,GAA0CG,YAAjD;AACH;AAXU,C","file":"ConfigSelectors.js","sourcesContent":["import {ThrowParam} from '../../utils/JSUtils'\nimport ConfigConstants from './ConfigConstants'\nimport UfpCoreSelectors from '../../core/UfpCoreSelectors'\n\nconst getReducerState = (state) => UfpCoreSelectors.getUfpState(state)[ConfigConstants.NAME]\n\nexport default {\n    getConfigValue: (globalState, {\n        key = ThrowParam('Config Key has to be set'),\n        area = ConfigConstants.DEFAULT_AREA,\n        defaultValue = undefined\n\n    }) => {\n        // console.log('Retrieving config value', globalState, area, key)\n        const state = getReducerState(globalState).data\n        // console.log('Retrieving config value', state, area, key)\n        return state && state[area] ? state[area][key] : defaultValue\n    }\n}\n"]}